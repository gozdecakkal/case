{"ast":null,"code":"import _classCallCheck from \"/home/gozdecakkal/Desktop/case/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gozdecakkal/Desktop/case/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, Optional, HostListener, NgModule } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\n\nvar InputText = /*#__PURE__*/function () {\n  function InputText(el, ngModel) {\n    _classCallCheck(this, InputText);\n\n    this.el = el;\n    this.ngModel = ngModel;\n  }\n\n  _createClass(InputText, [{\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.updateFilledState();\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(e) {\n      this.updateFilledState();\n    }\n  }, {\n    key: \"updateFilledState\",\n    value: function updateFilledState() {\n      this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length || this.ngModel && this.ngModel.model;\n    }\n  }]);\n\n  return InputText;\n}();\n\nInputText.ɵfac = function InputText_Factory(t) {\n  return new (t || InputText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgModel, 8));\n};\n\nInputText.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: InputText,\n  selectors: [[\"\", \"pInputText\", \"\"]],\n  hostVars: 6,\n  hostBindings: function InputText_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function InputText_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"p-inputtext\", true)(\"p-component\", true)(\"p-filled\", ctx.filled);\n    }\n  }\n});\n\nInputText.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgModel,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nInputText.propDecorators = {\n  onInput: [{\n    type: HostListener,\n    args: ['input', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputText, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputText]',\n      host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\n\nvar InputTextModule = function InputTextModule() {\n  _classCallCheck(this, InputTextModule);\n};\n\nInputTextModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: InputTextModule\n});\nInputTextModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function InputTextModule_Factory(t) {\n    return new (t || InputTextModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputTextModule, {\n    declarations: function declarations() {\n      return [InputText];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [InputText];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InputTextModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputText],\n      declarations: [InputText]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InputText, InputTextModule };","map":{"version":3,"sources":["../../src/app/components/inputtext/inputtext.ts","../../src/app/components/inputtext/primeng-inputtext.ts"],"names":[],"mappings":";;;;;;;;IAYa,S;AAIT,qBAAmB,EAAnB,EAAsD,OAAtD,EAAsE;AAAA;;AAAnD,SAAA,EAAA,GAAA,EAAA;AAAmC,SAAA,OAAA,GAAA,OAAA;AAAoB;;;;WAE1E,qBAAS;AACL,WAAK,iBAAL;AACH;;;WAGD,iBAAQ,CAAR,EAAS;AACL,WAAK,iBAAL;AACH;;;WAED,6BAAiB;AACb,WAAK,MAAL,GAAe,KAAK,EAAL,CAAQ,aAAR,CAAsB,KAAtB,IAA+B,KAAK,EAAL,CAAQ,aAAR,CAAsB,KAAtB,CAA4B,MAA5D,IACG,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,KAD9C;AAEH;;;;;;0BA1BJ,iB,CAAA,C,EAAS;AAAA,SAAC,KAAA,CAAA,IAAA,SAAA,EACP,MAAU,CAAA,iBAAV,CAAwB,MAAA,CAAA,UAAxB,CADO,EAED,MAAA,CAAA,iBAAA,CACF,MAAA,CAAA,OADE,EACF,CADE,CAFC,CAAD;AAGqB,C;;AAAM,SAAA,CAAA,IAAA,GAAA,MAC7B,CAAA,iBAD6B,CAC7B;AAAqB,EAAA,IAAE,EAAA,SAAvB;AAA6B,EAAA,SAAA,EAAA,CAAA,CAC7B,EAD6B,EAC7B,YAD6B,EACX,EADW,CAAA,CAA7B;AACoB,EAAA,QAAQ,EAAA,CAD5B;AAC4B,EAAA,YAC/B,EAAA,SACJ,sBADI,CACJ,EADI,EACJ,GADI,EACJ;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;AACI;AAJG,CAD6B,CAAA;;AAK/B,SAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAmC;AAAA,IAAA,IAAA,EAZd;AAYc,GAAnC,EAZmC;AAAA,IAAA,IAAA,EACjC,OADiC;AAC1B,IAAA,UAAA,EAAA,CAAA;AAAA,MAAA,IAAA,EAeyB;AAfzB,KAAA;AAD0B,GAYnC,CAAA;AAAA,CAAA;;AAImD,SAAA,CAAA,cAAA,GAAA;AAClD,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EAKF,YALE;AAKU,IAAA,IAAA,EAAA,CAAC,OAAD,EAAU,CAAC,QAAD,CAAV;AALV,GAAA;AADkD,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpD,C;;IAeQ,e;;;;8BALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACG,eAAU,CAAA,IAAV,GAAU,MAAa,CAAA,gBAAb,CACV;AAAA,EAAA,OAAU,EAAA,SAAU,uBAAV,CACV,CADU,EACE;AAAE,WAAC,KAAU,CAAA,IAAA,eAAV,GAAD;AACjB,GAFG;AAEH,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,CAAA;AAFG,CADU,CAAV;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIC,C;ACtCL;AACA;AACA;;;AAEA,SAAA,SAAA,EAAA,eAAA","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}