{"ast":null,"code":"import _classCallCheck from \"/home/gozdecakkal/Desktop/case/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gozdecakkal/Desktop/case/angular/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Input, Output, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/ripple';\n\nfunction Panel_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r3.id + \"_header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.header);\n  }\n}\n\nfunction Panel_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Panel_div_1_5_ng_template_0_Template(rf, ctx) {}\n\nfunction Panel_div_1_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, Panel_div_1_5_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction Panel_div_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function Panel_div_1_button_6_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.onIconClick($event);\n    })(\"keydown.enter\", function Panel_div_1_button_6_Template_button_keydown_enter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.onIconClick($event);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r6.id + \"-label\")(\"aria-controls\", ctx_r6.id + \"-content\")(\"aria-expanded\", !ctx_r6.collapsed);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(ctx_r6.collapsed ? ctx_r6.expandIcon : ctx_r6.collapseIcon);\n  }\n}\n\nfunction Panel_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function Panel_div_1_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onHeaderClick($event);\n    });\n    ɵngcc0.ɵɵtemplate(1, Panel_div_1_span_1_Template, 2, 2, \"span\", 7);\n    ɵngcc0.ɵɵprojection(2, 1);\n    ɵngcc0.ɵɵtemplate(3, Panel_div_1_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(5, Panel_div_1_5_Template, 1, 0, undefined, 4);\n    ɵngcc0.ɵɵtemplate(6, Panel_div_1_button_6_Template, 2, 5, \"button\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r0.id + \"-titlebar\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.header);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.toggleable);\n  }\n}\n\nfunction Panel_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Panel_div_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Panel_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵtemplate(2, Panel_div_6_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.footerTemplate);\n  }\n}\n\nvar _c0 = [\"*\", [[\"p-header\"]], [[\"p-footer\"]]];\n\nvar _c1 = function _c1(a1) {\n  return {\n    \"p-panel p-component\": true,\n    \"p-panel-toggleable\": a1\n  };\n};\n\nvar _c2 = function _c2(a0) {\n  return {\n    transitionParams: a0,\n    height: \"0\",\n    opacity: \"0\"\n  };\n};\n\nvar _c3 = function _c3(a1) {\n  return {\n    value: \"hidden\",\n    params: a1\n  };\n};\n\nvar _c4 = function _c4(a0) {\n  return {\n    transitionParams: a0,\n    height: \"*\",\n    opacity: \"1\"\n  };\n};\n\nvar _c5 = function _c5(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nvar _c6 = [\"*\", \"p-header\", \"p-footer\"];\nvar idx = 0;\n\nvar Panel = /*#__PURE__*/function () {\n  function Panel(el) {\n    _classCallCheck(this, Panel);\n\n    this.el = el;\n    this.collapsed = false;\n    this.expandIcon = 'pi pi-plus';\n    this.collapseIcon = 'pi pi-minus';\n    this.showHeader = true;\n    this.toggler = \"icon\";\n    this.collapsedChange = new EventEmitter();\n    this.onBeforeToggle = new EventEmitter();\n    this.onAfterToggle = new EventEmitter();\n    this.transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    this.id = \"p-panel-\".concat(idx++);\n  }\n\n  _createClass(Panel, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'header':\n            _this.headerTemplate = item.template;\n            break;\n\n          case 'content':\n            _this.contentTemplate = item.template;\n            break;\n\n          case 'footer':\n            _this.footerTemplate = item.template;\n            break;\n\n          case 'icons':\n            _this.iconTemplate = item.template;\n            break;\n\n          default:\n            _this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"onHeaderClick\",\n    value: function onHeaderClick(event) {\n      if (this.toggler === 'header') {\n        this.toggle(event);\n      }\n    }\n  }, {\n    key: \"onIconClick\",\n    value: function onIconClick(event) {\n      if (this.toggler === 'icon') {\n        this.toggle(event);\n      }\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (this.animating) {\n        return false;\n      }\n\n      this.animating = true;\n      this.onBeforeToggle.emit({\n        originalEvent: event,\n        collapsed: this.collapsed\n      });\n\n      if (this.toggleable) {\n        if (this.collapsed) this.expand(event);else this.collapse(event);\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(event) {\n      this.collapsed = false;\n      this.collapsedChange.emit(this.collapsed);\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse(event) {\n      this.collapsed = true;\n      this.collapsedChange.emit(this.collapsed);\n    }\n  }, {\n    key: \"getBlockableElement\",\n    value: function getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n  }, {\n    key: \"onToggleDone\",\n    value: function onToggleDone(event) {\n      this.animating = false;\n      this.onAfterToggle.emit({\n        originalEvent: event,\n        collapsed: this.collapsed\n      });\n    }\n  }]);\n\n  return Panel;\n}();\n\nPanel.ɵfac = function Panel_Factory(t) {\n  return new (t || Panel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Panel,\n  selectors: [[\"p-panel\"]],\n  contentQueries: function Panel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, Footer, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerFacet = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    collapsed: \"collapsed\",\n    expandIcon: \"expandIcon\",\n    collapseIcon: \"collapseIcon\",\n    showHeader: \"showHeader\",\n    toggler: \"toggler\",\n    transitionOptions: \"transitionOptions\",\n    toggleable: \"toggleable\",\n    header: \"header\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  outputs: {\n    collapsedChange: \"collapsedChange\",\n    onBeforeToggle: \"onBeforeToggle\",\n    onAfterToggle: \"onAfterToggle\"\n  },\n  ngContentSelectors: _c6,\n  decls: 7,\n  vars: 22,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-panel-header\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"region\", 1, \"p-toggleable-content\"], [1, \"p-panel-content\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-panel-footer\", 4, \"ngIf\"], [1, \"p-panel-header\", 3, \"click\"], [\"class\", \"p-panel-title\", 4, \"ngIf\"], [1, \"p-panel-icons\"], [\"type\", \"button\", \"class\", \"p-panel-header-icon p-panel-toggler p-link\", \"pRipple\", \"\", \"role\", \"tab\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [1, \"p-panel-title\"], [\"type\", \"button\", \"pRipple\", \"\", \"role\", \"tab\", 1, \"p-panel-header-icon\", \"p-panel-toggler\", \"p-link\", 3, \"click\", \"keydown.enter\"], [1, \"p-panel-footer\"]],\n  template: function Panel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, Panel_div_1_Template, 7, 5, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵlistener(\"@panelContent.done\", function Panel_Template_div_animation_panelContent_done_2_listener($event) {\n        return ctx.onToggleDone($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵtemplate(5, Panel_ng_container_5_Template, 1, 0, \"ng-container\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, Panel_div_6_Template, 3, 1, \"div\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(12, _c1, ctx.toggleable))(\"ngStyle\", ctx.style);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showHeader);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@panelContent\", ctx.collapsed ? ɵngcc0.ɵɵpureFunction1(16, _c3, ɵngcc0.ɵɵpureFunction1(14, _c2, ctx.animating ? ctx.transitionOptions : \"0ms\")) : ɵngcc0.ɵɵpureFunction1(20, _c5, ɵngcc0.ɵɵpureFunction1(18, _c4, ctx.animating ? ctx.transitionOptions : \"0ms\")));\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id + \"-content\")(\"aria-hidden\", ctx.collapsed)(\"aria-labelledby\", ctx.id + \"-titlebar\");\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerFacet || ctx.footerTemplate);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.Ripple],\n  styles: [\".p-panel-header{align-items:center;display:flex;justify-content:space-between}.p-panel-title{line-height:1}.p-panel-header-icon{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('panelContent', [state('hidden', style({\n      height: '0',\n      overflow: 'hidden'\n    })), state('void', style({\n      height: '{{height}}'\n    }), {\n      params: {\n        height: '0'\n      }\n    }), state('visible', style({\n      height: '*'\n    })), transition('visible <=> hidden', [style({\n      overflow: 'hidden'\n    }), animate('{{transitionParams}}')]), transition('void => hidden', animate('{{transitionParams}}')), transition('void => visible', animate('{{transitionParams}}'))])]\n  },\n  changeDetection: 0\n});\n\nPanel.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nPanel.propDecorators = {\n  toggleable: [{\n    type: Input\n  }],\n  header: [{\n    type: Input\n  }],\n  collapsed: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  expandIcon: [{\n    type: Input\n  }],\n  collapseIcon: [{\n    type: Input\n  }],\n  showHeader: [{\n    type: Input\n  }],\n  toggler: [{\n    type: Input\n  }],\n  collapsedChange: [{\n    type: Output\n  }],\n  onBeforeToggle: [{\n    type: Output\n  }],\n  onAfterToggle: [{\n    type: Output\n  }],\n  transitionOptions: [{\n    type: Input\n  }],\n  footerFacet: [{\n    type: ContentChild,\n    args: [Footer]\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Panel, [{\n    type: Component,\n    args: [{\n      selector: 'p-panel',\n      template: \"\\n        <div [attr.id]=\\\"id\\\" [ngClass]=\\\"{'p-panel p-component': true, 'p-panel-toggleable': toggleable}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"p-panel-header\\\" *ngIf=\\\"showHeader\\\" (click)=\\\"onHeaderClick($event)\\\" [attr.id]=\\\"id + '-titlebar'\\\">\\n                <span class=\\\"p-panel-title\\\" *ngIf=\\\"header\\\" [attr.id]=\\\"id + '_header'\\\">{{header}}</span>\\n                <ng-content select=\\\"p-header\\\"></ng-content>\\n                <ng-container *ngTemplateOutlet=\\\"headerTemplate\\\"></ng-container>\\n                <div class=\\\"p-panel-icons\\\">\\n                    <ng-template *ngTemplateOutlet=\\\"iconTemplate\\\"></ng-template>\\n                    <button *ngIf=\\\"toggleable\\\" type=\\\"button\\\" [attr.id]=\\\"id + '-label'\\\" class=\\\"p-panel-header-icon p-panel-toggler p-link\\\" pRipple\\n                        (click)=\\\"onIconClick($event)\\\" (keydown.enter)=\\\"onIconClick($event)\\\" [attr.aria-controls]=\\\"id + '-content'\\\" role=\\\"tab\\\" [attr.aria-expanded]=\\\"!collapsed\\\">\\n                        <span [class]=\\\"collapsed ? expandIcon : collapseIcon\\\"></span>\\n                    </button>\\n                </div>\\n            </div>\\n            <div [attr.id]=\\\"id + '-content'\\\" class=\\\"p-toggleable-content\\\" [@panelContent]=\\\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\\\" (@panelContent.done)=\\\"onToggleDone($event)\\\"\\n                role=\\\"region\\\" [attr.aria-hidden]=\\\"collapsed\\\" [attr.aria-labelledby]=\\\"id  + '-titlebar'\\\">\\n                <div class=\\\"p-panel-content\\\">\\n                    <ng-content></ng-content>\\n                    <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n                </div>\\n                \\n                <div class=\\\"p-panel-footer\\\" *ngIf=\\\"footerFacet || footerTemplate\\\">\\n                    <ng-content select=\\\"p-footer\\\"></ng-content>\\n                    <ng-container *ngTemplateOutlet=\\\"footerTemplate\\\"></ng-container>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n      animations: [trigger('panelContent', [state('hidden', style({\n        height: '0',\n        overflow: 'hidden'\n      })), state('void', style({\n        height: '{{height}}'\n      }), {\n        params: {\n          height: '0'\n        }\n      }), state('visible', style({\n        height: '*'\n      })), transition('visible <=> hidden', [style({\n        overflow: 'hidden'\n      }), animate('{{transitionParams}}')]), transition('void => hidden', animate('{{transitionParams}}')), transition('void => visible', animate('{{transitionParams}}'))])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".p-panel-header{align-items:center;display:flex;justify-content:space-between}.p-panel-title{line-height:1}.p-panel-header-icon{align-items:center;cursor:pointer;display:inline-flex;justify-content:center;overflow:hidden;position:relative;text-decoration:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    collapsed: [{\n      type: Input\n    }],\n    expandIcon: [{\n      type: Input\n    }],\n    collapseIcon: [{\n      type: Input\n    }],\n    showHeader: [{\n      type: Input\n    }],\n    toggler: [{\n      type: Input\n    }],\n    collapsedChange: [{\n      type: Output\n    }],\n    onBeforeToggle: [{\n      type: Output\n    }],\n    onAfterToggle: [{\n      type: Output\n    }],\n    transitionOptions: [{\n      type: Input\n    }],\n    toggleable: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    footerFacet: [{\n      type: ContentChild,\n      args: [Footer]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar PanelModule = function PanelModule() {\n  _classCallCheck(this, PanelModule);\n};\n\nPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PanelModule\n});\nPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PanelModule_Factory(t) {\n    return new (t || PanelModule)();\n  },\n  imports: [[CommonModule, SharedModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PanelModule, {\n    declarations: function declarations() {\n      return [Panel];\n    },\n    imports: function imports() {\n      return [CommonModule, SharedModule, RippleModule];\n    },\n    exports: function exports() {\n      return [Panel, SharedModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PanelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, RippleModule],\n      exports: [Panel, SharedModule],\n      declarations: [Panel]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Panel, PanelModule };","map":{"version":3,"sources":["../../src/app/components/panel/panel.ts","../../src/app/components/panel/primeng-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, TemplateRef, AfterContentInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer, PrimeTemplate} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {RippleModule} from 'primeng/ripple';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"{'p-panel p-component': true, 'p-panel-toggleable': toggleable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-panel-header\" *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"p-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                <div class=\"p-panel-icons\">\n                    <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n                    <button *ngIf=\"toggleable\" type=\"button\" [attr.id]=\"id + '-label'\" class=\"p-panel-header-icon p-panel-toggler p-link\" pRipple\n                        (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                        <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                    </button>\n                </div>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"p-toggleable-content\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"p-panel-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                </div>\n                \n                <div class=\"p-panel-footer\" *ngIf=\"footerFacet || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                overflow: 'hidden'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', [style({ overflow: 'hidden'}), animate('{{transitionParams}}')]),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n   changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./panel.css']\n})\nexport class Panel implements AfterContentInit,BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    public iconTemplate: TemplateRef<any>;\n    \n    animating: boolean;\n\n    headerTemplate: TemplateRef<any>;\n\n    contentTemplate: TemplateRef<any>;\n\n    footerTemplate: TemplateRef<any>;\n    \n    id: string = `p-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) { }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'footer':\n                    this.footerTemplate = item.template;\n                break;\n\n                case 'icons':\n                    this.iconTemplate = item.template;\n                break;\n\n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,SharedModule,RippleModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}