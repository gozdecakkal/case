{"ast":null,"code":"import _classCallCheck from \"/home/gozdecakkal/Desktop/deneme/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gozdecakkal/Desktop/deneme/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, Input, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, Output, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport { CommonModule } from '@angular/common';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate } from 'primeng/api';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/ripple';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction Button_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c0 = function _c0(a1, a2, a3, a4) {\n  return {\n    \"p-button-icon\": true,\n    \"p-button-icon-left\": a1,\n    \"p-button-icon-right\": a2,\n    \"p-button-icon-top\": a3,\n    \"p-button-icon-bottom\": a4\n  };\n};\n\nfunction Button_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.loading ? \"p-button-loading-icon \" + ctx_r1.loadingIcon : ctx_r1.icon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(4, _c0, ctx_r1.iconPos === \"left\" && ctx_r1.label, ctx_r1.iconPos === \"right\" && ctx_r1.label, ctx_r1.iconPos === \"top\" && ctx_r1.label, ctx_r1.iconPos === \"bottom\" && ctx_r1.label));\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\n\nfunction Button_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", ctx_r2.icon && !ctx_r2.label);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.label || \"\\xA0\");\n  }\n}\n\nfunction Button_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.badgeClass);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r3.badgeStyleClass());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.badge);\n  }\n}\n\nvar _c1 = function _c1(a1, a2, a3, a4, a5) {\n  return {\n    \"p-button p-component\": true,\n    \"p-button-icon-only\": a1,\n    \"p-button-vertical\": a2,\n    \"p-disabled\": a3,\n    \"p-button-loading\": a4,\n    \"p-button-loading-label-only\": a5\n  };\n};\n\nvar _c2 = [\"*\"];\n\nvar ButtonDirective = /*#__PURE__*/function () {\n  function ButtonDirective(el) {\n    _classCallCheck(this, ButtonDirective);\n\n    this.el = el;\n    this.iconPos = 'left';\n    this.loadingIcon = \"pi pi-spinner pi-spin\";\n    this._loading = false;\n  }\n\n  _createClass(ButtonDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this._initialStyleClass = this.el.nativeElement.className;\n      DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n      if (this.icon) {\n        this.createIconEl();\n      }\n\n      var labelElement = document.createElement(\"span\");\n\n      if (this.icon && !this.label) {\n        labelElement.setAttribute('aria-hidden', 'true');\n      }\n\n      labelElement.className = 'p-button-label';\n      if (this.label) labelElement.appendChild(document.createTextNode(this.label));else labelElement.innerHTML = '&nbsp;';\n      this.el.nativeElement.appendChild(labelElement);\n      this.initialized = true;\n    }\n  }, {\n    key: \"getStyleClass\",\n    value: function getStyleClass() {\n      var styleClass = 'p-button p-component';\n\n      if (this.icon && !this.label) {\n        styleClass = styleClass + ' p-button-icon-only';\n      }\n\n      if (this.loading) {\n        styleClass = styleClass + ' p-disabled p-button-loading';\n        if (!this.icon && this.label) styleClass = styleClass + ' p-button-loading-label-only';\n      }\n\n      return styleClass;\n    }\n  }, {\n    key: \"setStyleClass\",\n    value: function setStyleClass() {\n      var styleClass = this.getStyleClass();\n      this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n  }, {\n    key: \"createIconEl\",\n    value: function createIconEl() {\n      var iconElement = document.createElement(\"span\");\n      iconElement.className = 'p-button-icon';\n      iconElement.setAttribute(\"aria-hidden\", \"true\");\n      var iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n\n      if (iconPosClass) {\n        DomHandler.addClass(iconElement, iconPosClass);\n      }\n\n      DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n      var labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label');\n      if (labelEl) this.el.nativeElement.insertBefore(iconElement, labelEl);else this.el.nativeElement.appendChild(iconElement);\n    }\n  }, {\n    key: \"getIconClass\",\n    value: function getIconClass() {\n      return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n    }\n  }, {\n    key: \"setIconClass\",\n    value: function setIconClass() {\n      var iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n\n      if (iconElement) {\n        if (this.iconPos) iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();else iconElement.className = 'p-button-icon ' + this.getIconClass();\n      } else {\n        this.createIconEl();\n      }\n    }\n  }, {\n    key: \"removeIconElement\",\n    value: function removeIconElement() {\n      var iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n      this.el.nativeElement.removeChild(iconElement);\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label;\n    },\n    set: function set(val) {\n      this._label = val;\n\n      if (this.initialized) {\n        DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n        this.setStyleClass();\n      }\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return this._icon;\n    },\n    set: function set(val) {\n      this._icon = val;\n\n      if (this.initialized) {\n        this.setIconClass();\n        this.setStyleClass();\n      }\n    }\n  }, {\n    key: \"loading\",\n    get: function get() {\n      return this._loading;\n    },\n    set: function set(val) {\n      this._loading = val;\n\n      if (this.initialized) {\n        if (this.loading || this.icon) this.setIconClass();else this.removeIconElement();\n        this.setStyleClass();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.initialized = false;\n    }\n  }]);\n\n  return ButtonDirective;\n}();\n\nButtonDirective.ɵfac = function ButtonDirective_Factory(t) {\n  return new (t || ButtonDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nButtonDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ButtonDirective,\n  selectors: [[\"\", \"pButton\", \"\"]],\n  inputs: {\n    iconPos: \"iconPos\",\n    loadingIcon: \"loadingIcon\",\n    label: \"label\",\n    icon: \"icon\",\n    loading: \"loading\"\n  }\n});\n\nButtonDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nButtonDirective.propDecorators = {\n  iconPos: [{\n    type: Input\n  }],\n  loadingIcon: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ButtonDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[pButton]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    iconPos: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }]\n  });\n})();\n\nvar Button = /*#__PURE__*/function () {\n  function Button() {\n    _classCallCheck(this, Button);\n\n    this.type = \"button\";\n    this.iconPos = 'left';\n    this.loading = false;\n    this.loadingIcon = \"pi pi-spinner pi-spin\";\n    this.onClick = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n  }\n\n  _createClass(Button, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'content':\n            _this.contentTemplate = item.template;\n            break;\n\n          default:\n            _this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"badgeStyleClass\",\n    value: function badgeStyleClass() {\n      return {\n        'p-badge p-component': true,\n        'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n      };\n    }\n  }]);\n\n  return Button;\n}();\n\nButton.ɵfac = function Button_Factory(t) {\n  return new (t || Button)();\n};\n\nButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Button,\n  selectors: [[\"p-button\"]],\n  contentQueries: function Button_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  inputs: {\n    type: \"type\",\n    iconPos: \"iconPos\",\n    loading: \"loading\",\n    loadingIcon: \"loadingIcon\",\n    icon: \"icon\",\n    badge: \"badge\",\n    label: \"label\",\n    disabled: \"disabled\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    badgeClass: \"badgeClass\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  ngContentSelectors: _c2,\n  decls: 6,\n  vars: 16,\n  consts: [[\"pRipple\", \"\", 3, \"ngStyle\", \"disabled\", \"ngClass\", \"click\", \"focus\", \"blur\"], [4, \"ngTemplateOutlet\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [\"class\", \"p-button-label\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-button-label\"]],\n  template: function Button_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n        return ctx.onFocus.emit($event);\n      })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n        return ctx.onBlur.emit($event);\n      });\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵtemplate(2, Button_ng_container_2_Template, 1, 0, \"ng-container\", 1);\n      ɵngcc0.ɵɵtemplate(3, Button_span_3_Template, 1, 9, \"span\", 2);\n      ɵngcc0.ɵɵtemplate(4, Button_span_4_Template, 2, 2, \"span\", 3);\n      ɵngcc0.ɵɵtemplate(5, Button_span_5_Template, 2, 4, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.styleClass);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"disabled\", ctx.disabled || ctx.loading)(\"ngClass\", ɵngcc0.ɵɵpureFunction5(10, _c1, ctx.icon && !ctx.label, (ctx.iconPos === \"top\" || ctx.iconPos === \"bottom\") && ctx.label, ctx.disabled || ctx.loading, ctx.loading, ctx.loading && !ctx.icon && ctx.label));\n      ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && (ctx.icon || ctx.loading));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && ctx.badge);\n    }\n  },\n  directives: [ɵngcc1.Ripple, ɵngcc2.NgStyle, ɵngcc2.NgClass, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\nButton.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  iconPos: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  badge: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  loadingIcon: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  badgeClass: [{\n    type: Input\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }],\n  onClick: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Button, [{\n    type: Component,\n    args: [{\n      selector: 'p-button',\n      template: \"\\n        <button [attr.type]=\\\"type\\\" [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" [disabled]=\\\"disabled || loading\\\"\\n            [ngClass]=\\\"{'p-button p-component':true,\\n                        'p-button-icon-only': (icon && !label),\\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\\n                        'p-disabled': this.disabled || this.loading,\\n                        'p-button-loading': this.loading,\\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\\\"\\n                        (click)=\\\"onClick.emit($event)\\\" (focus)=\\\"onFocus.emit($event)\\\" (blur)=\\\"onBlur.emit($event)\\\" pRipple>\\n            <ng-content></ng-content>\\n            <ng-container *ngTemplateOutlet=\\\"contentTemplate\\\"></ng-container>\\n            <span [ngClass]=\\\"{'p-button-icon': true,\\n                        'p-button-icon-left': iconPos === 'left' && label,\\n                        'p-button-icon-right': iconPos === 'right' && label,\\n                        'p-button-icon-top': iconPos === 'top' && label,\\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\\\"\\n                        [class]=\\\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\\\" *ngIf=\\\"!contentTemplate && (icon||loading)\\\" [attr.aria-hidden]=\\\"true\\\"></span>\\n            <span class=\\\"p-button-label\\\" [attr.aria-hidden]=\\\"icon && !label\\\" *ngIf=\\\"!contentTemplate\\\">{{label||'&nbsp;'}}</span>\\n            <span [ngClass]=\\\"badgeStyleClass()\\\" [class]=\\\"badgeClass\\\" *ngIf=\\\"!contentTemplate && badge\\\">{{badge}}</span>\\n        </button>\\n    \",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], function () {\n    return [];\n  }, {\n    type: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    icon: [{\n      type: Input\n    }],\n    badge: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    badgeClass: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nvar ButtonModule = function ButtonModule() {\n  _classCallCheck(this, ButtonModule);\n};\n\nButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ButtonModule\n});\nButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ButtonModule_Factory(t) {\n    return new (t || ButtonModule)();\n  },\n  imports: [[CommonModule, RippleModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonModule, {\n    declarations: function declarations() {\n      return [ButtonDirective, Button];\n    },\n    imports: function imports() {\n      return [CommonModule, RippleModule];\n    },\n    exports: function exports() {\n      return [ButtonDirective, Button];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [ButtonDirective, Button],\n      declarations: [ButtonDirective, Button]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Button, ButtonDirective, ButtonModule };","map":{"version":3,"sources":["../../src/app/components/button/button.ts","../../src/app/components/button/primeng-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,Input,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, AfterContentInit, TemplateRef, QueryList} from '@angular/core';\nimport {DomHandler} from 'primeng/dom';\nimport {CommonModule} from '@angular/common';\nimport {RippleModule} from 'primeng/ripple'; \nimport {PrimeTemplate} from 'primeng/api'; \n\n@Directive({\n    selector: '[pButton]'\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    public _label: string;\n    \n    public _icon: string;\n\n    public _loading: boolean = false;\n            \n    public initialized: boolean;\n    \n    public _initialStyleClass: string;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this._initialStyleClass = this.el.nativeElement.className;\n        DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n\n        if (this.icon) {\n            this.createIconEl();\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        if (this.icon && !this.label) {\n            labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n\n        if (this.label)\n            labelElement.appendChild(document.createTextNode(this.label));\n        else \n            labelElement.innerHTML = '&nbsp;';\n        \n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'p-button p-component';\n        if (this.icon && !this.label) {\n            styleClass = styleClass + ' p-button-icon-only';\n        }\n\n        if (this.loading) {\n            styleClass = styleClass + ' p-disabled p-button-loading';\n            if (!this.icon && this.label)\n                styleClass = styleClass + ' p-button-loading-label-only';\n        }\n        \n        return styleClass;\n    }\n\n    setStyleClass() {\n        let styleClass = this.getStyleClass();\n        this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n    }\n\n    createIconEl() {\n        let iconElement = document.createElement(\"span\");\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute(\"aria-hidden\", \"true\");\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        \n        if (iconPosClass) {\n            DomHandler.addClass(iconElement, iconPosClass);\n        }\n\n        DomHandler.addMultipleClasses(iconElement, this.getIconClass());\n        let labelEl = DomHandler.findSingle(this.el.nativeElement, '.p-button-label')\n\n        if (labelEl)\n            this.el.nativeElement.insertBefore(iconElement, labelEl);\n        else\n            this.el.nativeElement.appendChild(iconElement)\n    }\n\n    getIconClass() {\n        return this.loading ? 'p-button-loading-icon ' + this.loadingIcon : this._icon;\n    }\n\n    setIconClass() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        if (iconElement) {\n            if (this.iconPos) \n                iconElement.className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this.getIconClass();\n            else \n                iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n        else {\n            this.createIconEl();\n        }\n    }\n\n    removeIconElement() {\n        let iconElement = DomHandler.findSingle(this.el.nativeElement, '.p-button-icon');\n        this.el.nativeElement.removeChild(iconElement)\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if (this.initialized) {\n            DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n            this.setStyleClass();\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if (this.initialized) {\n            this.setIconClass();\n            this.setStyleClass();\n        }\n    }\n\n    @Input() get loading(): boolean {\n        return this._loading;\n    }\n\n    set loading(val: boolean) {\n        this._loading = val;\n        \n        if (this.initialized) {\n            if (this.loading || this.icon)\n                this.setIconClass();\n            else \n                this.removeIconElement();\n            \n            this.setStyleClass();\n        }\n    }\n    \n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [ngStyle]=\"style\" [disabled]=\"disabled || loading\"\n            [ngClass]=\"{'p-button p-component':true,\n                        'p-button-icon-only': (icon && !label),\n                        'p-button-vertical': (iconPos === 'top' || iconPos === 'bottom') && label,\n                        'p-disabled': this.disabled || this.loading,\n                        'p-button-loading': this.loading,\n                        'p-button-loading-label-only': this.loading && !this.icon && this.label}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\" pRipple>\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            <span [ngClass]=\"{'p-button-icon': true,\n                        'p-button-icon-left': iconPos === 'left' && label,\n                        'p-button-icon-right': iconPos === 'right' && label,\n                        'p-button-icon-top': iconPos === 'top' && label,\n                        'p-button-icon-bottom': iconPos === 'bottom' && label}\"\n                        [class]=\"loading ? 'p-button-loading-icon ' + loadingIcon : icon\" *ngIf=\"!contentTemplate && (icon||loading)\" [attr.aria-hidden]=\"true\"></span>\n            <span class=\"p-button-label\" [attr.aria-hidden]=\"icon && !label\" *ngIf=\"!contentTemplate\">{{label||'&nbsp;'}}</span>\n            <span [ngClass]=\"badgeStyleClass()\" [class]=\"badgeClass\" *ngIf=\"!contentTemplate && badge\">{{badge}}</span>\n        </button>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Button implements AfterContentInit {\n\n    @Input() type: string = \"button\";\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() badge: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() loading: boolean = false;\n\n    @Input() loadingIcon: string = \"pi pi-spinner pi-spin\";\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() badgeClass: string;\n\n    contentTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    badgeStyleClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RippleModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}